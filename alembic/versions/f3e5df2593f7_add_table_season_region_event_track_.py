"""add table: season/region/event/track/record & add role property to User

Revision ID: f3e5df2593f7
Revises: b33de7fbf839
Create Date: 2025-06-03 22:59:42.017945

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f3e5df2593f7'
down_revision: Union[str, None] = 'b33de7fbf839'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('seasons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('sport_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('public_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('region_id', sa.UUID(), nullable=False),
    sa.Column('season_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_public_id'), 'events', ['public_id'], unique=True)
    op.create_table('tracks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('public_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('from_lat', sa.String(), nullable=False),
    sa.Column('from_lng', sa.String(), nullable=False),
    sa.Column('to_lat', sa.String(), nullable=False),
    sa.Column('to_lng', sa.String(), nullable=False),
    sa.Column('elevation_difference', sa.Integer(), nullable=True),
    sa.Column('fee', sa.Integer(), nullable=True),
    sa.Column('prize_pool', sa.Integer(), nullable=True),
    sa.Column('total_participants', sa.Integer(), nullable=True),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracks_public_id'), 'tracks', ['public_id'], unique=True)
    op.create_table('race_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('track_id', sa.UUID(), nullable=False),
    sa.Column('season_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_team', sa.Boolean(), nullable=True),
    sa.Column('team_code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('role', sa.String(), nullable=True))
    op.execute("UPDATE users SET role = 'user'")
    op.execute("UPDATE users SET role = 'admin' WHERE phone_number = '17755463247'")
    op.alter_column('users', 'role', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'role')
    op.drop_table('race_records')
    op.drop_index(op.f('ix_tracks_public_id'), table_name='tracks')
    op.drop_table('tracks')
    op.drop_index(op.f('ix_events_public_id'), table_name='events')
    op.drop_table('events')
    op.drop_table('seasons')
    op.drop_table('regions')
    # ### end Alembic commands ###
